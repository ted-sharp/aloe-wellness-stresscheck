---
description: 
globs: 
alwaysApply: false
---
# ルールの目的
このルールは、dotnetコマンドの実行における一貫性と信頼性を確保し、環境に依存しない確実な実行を実現することを目的としています。

# 具体的な要件

## 1. プロジェクトファイルの特定
- 条件: dotnetコマンドを実行する場合
- アクション: 
  - ワークスペース内で.slnまたは.csprojファイルを検索
  - 最も適切なファイル（通常はルートやsrc配下の.sln）を特定
- 期待される結果: 実行対象のプロジェクトファイルの特定

## 2. コマンドの実行
- 条件: プロジェクトファイルが特定できた場合
- アクション: 
  - プロジェクトファイルを明示的に指定してコマンドを実行
  - カレントディレクトリに依存した実行を避ける
- 期待される結果: 確実なコマンド実行

# ルールの検証
- [ ] プロジェクトファイルが適切に特定されているか
- [ ] コマンドが明示的なパス指定で実行されているか
- [ ] カレントディレクトリに依存していないか

# ルール違反時の対応
1. プロジェクトファイルが特定できない場合
   - ワークスペースの構造を確認
   - プロジェクトファイルの場所を特定
   - 必要に応じてプロジェクトファイルを作成

2. コマンドが失敗する場合
   - プロジェクトファイルのパスを確認
   - コマンドの構文を確認
   - エラーメッセージを確認

# 適用例

## 良い例
```powershell
# ソリューションファイルを指定して一括実行（推奨）
dotnet build ./src/ProjectName.sln
dotnet test ./src/ProjectName.sln

# 個別のプロジェクトファイルを指定
dotnet build ./src/ProjectName/ProjectName.csproj
dotnet test ./src/ProjectName.Tests/ProjectName.Tests.csproj
```

## 悪い例
```powershell
# カレントディレクトリに依存
dotnet build
dotnet test

# 相対パスのみの指定
dotnet build ./src/ProjectName
dotnet test ./src/ProjectName.Tests
```

# ベストプラクティス
- プロジェクトファイルのパスを明示的に指定
- ワークスペースのルートからの絶対パスを使用
- コマンド実行前にプロジェクトファイルの存在を確認
- エラー発生時はエラーメッセージを確認

# 依存ルール
- 00-knowledge-management.mdc: ナレッジ管理のルール

# 関連ルール
- 02-implementation.mdc: 実装のルール
- 04-style-guide.mdc: コーディングスタイルガイド

